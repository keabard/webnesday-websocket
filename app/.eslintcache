[{"/home/keabard/dev/xebia/webnesday/websockets/app/src/index.js":"1","/home/keabard/dev/xebia/webnesday/websockets/app/src/reportWebVitals.js":"2","/home/keabard/dev/xebia/webnesday/websockets/app/src/App.js":"3","/home/keabard/dev/xebia/webnesday/websockets/app/src/components/WebSocketDemo/index.js":"4","/home/keabard/dev/xebia/webnesday/websockets/app/src/components/MousePosition/index.js":"5"},{"size":500,"mtime":1611139798407,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1611139798407,"results":"8","hashOfConfig":"7"},{"size":281,"mtime":1611160999657,"results":"9","hashOfConfig":"7"},{"size":1443,"mtime":1611160999733,"results":"10","hashOfConfig":"7"},{"size":926,"mtime":1611161207216,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"8267nq",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/keabard/dev/xebia/webnesday/websockets/app/src/index.js",[],["24","25"],"/home/keabard/dev/xebia/webnesday/websockets/app/src/reportWebVitals.js",[],"/home/keabard/dev/xebia/webnesday/websockets/app/src/App.js",["26","27"],"/home/keabard/dev/xebia/webnesday/websockets/app/src/components/WebSocketDemo/index.js",["28","29"],"import React, {useCallback, useState, useEffect} from 'react';\n\nimport useWebSocket, {ReadyState} from 'react-use-websocket';\n\nconst WebSocketDemo = () => {\n  //Public API that will echo messages sent to it back to the client\n  const socketUrl = 'wss://echo.websocket.org';\n  // const socketUrl = 'ws://localhost:1234/hello';\n  // const socketUrl = 'ws://localhost:1234/echo';\n  const [messageHistory, setMessageHistory] = useState([]);\n \n  const {\n    sendMessage,\n    lastMessage,\n    readyState,\n  } = useWebSocket(socketUrl);\n \n  useEffect(() => {\n    if (lastMessage) {\n      setMessageHistory(messageHistory.concat(lastMessage));\n    }\n  },[lastMessage]);\n\n \n  const handleClickSendMessage = useCallback(() =>\n    sendMessage('Hello'), []);\n \n  const connectionStatus = {\n    [ReadyState.CONNECTING]: 'Connecting',\n    [ReadyState.OPEN]: 'Open',\n    [ReadyState.CLOSING]: 'Closing',\n    [ReadyState.CLOSED]: 'Closed',\n    [ReadyState.UNINSTANTIATED]: 'Uninstantiated',\n  }[readyState];\n \n  return (\n    <div>\n      <div>The WebSocket is currently {connectionStatus}</div>\n      <br />\n      <button\n        onClick={handleClickSendMessage}\n        disabled={readyState !== ReadyState.OPEN}\n      >\n        Click Me to send 'Hello'\n      </button>\n      <br /><br />Message History\n      <ul>\n        {messageHistory\n          .map((message, idx) => message.data).join(', ')}\n      </ul>\n    </div>\n  );\n};\n \nexport default WebSocketDemo;","/home/keabard/dev/xebia/webnesday/websockets/app/src/components/MousePosition/index.js",[],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":1,"column":8,"nodeType":"36","messageId":"37","endLine":1,"endColumn":12},{"ruleId":"34","severity":1,"message":"38","line":3,"column":8,"nodeType":"36","messageId":"37","endLine":3,"endColumn":21},{"ruleId":"39","severity":1,"message":"40","line":22,"column":5,"nodeType":"41","endLine":22,"endColumn":18,"suggestions":"42"},{"ruleId":"39","severity":1,"message":"43","line":26,"column":27,"nodeType":"41","endLine":26,"endColumn":29,"suggestions":"44"},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'WebSocketDemo' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'messageHistory'. Either include it or remove the dependency array. You can also do a functional update 'setMessageHistory(m => ...)' if you only need 'messageHistory' in the 'setMessageHistory' call.","ArrayExpression",["47"],"React Hook useCallback has a missing dependency: 'sendMessage'. Either include it or remove the dependency array.",["48"],"no-global-assign","no-unsafe-negation",{"desc":"49","fix":"50"},{"desc":"51","fix":"52"},"Update the dependencies array to be: [lastMessage, messageHistory]",{"range":"53","text":"54"},"Update the dependencies array to be: [sendMessage]",{"range":"55","text":"56"},[653,666],"[lastMessage, messageHistory]",[749,751],"[sendMessage]"]